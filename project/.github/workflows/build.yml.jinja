name: Build

on: [push, pull_request]

jobs:
  test:
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    continue-on-error: {% raw %}${{ matrix.python_version == '3.14' }}{% endraw %}
    strategy:
      matrix:
        python_version: ["3.12", "3.13", "3.14"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      {% if use_qt %}

      - uses: tlambert03/setup-qt-libs@v1
      # *alternative*:
      # - uses: pyvista/setup-headless-display-action@v2
      #   with:
      #     qt: true

      {% endif %}
      - name: Set up Python {% raw %}${{ matrix.python_version }}{% endraw %}
        uses: actions/setup-python@v5
        with:
          python-version: {% raw %}${{ matrix.python_version }}{% endraw %}
          allow-prereleases: true
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml
          cache-suffix: {% raw %}py${{ matrix.python_version }}{% endraw %}

      - name: Install dependencies (uv sync)
        run: uv sync --all-extras

      - name: Check for code issues (ruff check)
        uses: astral-sh/ruff-action@v1

      - name: Check code format (ruff format)
        uses: astral-sh/ruff-action@v1
        with:
          args: "format --check"

      - name: Static type checking (MyPy)
        run: uv run mypy src/{{ python_package_import_name }}/

      - name: Run tests
        run: uv run pytest --cov-report=xml --cov=src/{{ python_package_import_name }}/ --cov-report=term-missing

      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
          fail_ci_if_error: false
          verbose: true

  release:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      # this permission is mandatory for trusted publishing
      id-token: write
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "{{ python_minimum_version }}"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml
          cache-suffix: {% raw %}py${{ matrix.python_version }}{% endraw %}

      - name: Build package
        run: uv build

      - name: Release package on PyPI
        run: uv publish

      - name: Release package on GitHub
        uses: ncipollo/release-action@v1
        with:
          body: {% raw %}${{ github.event.head_commit.message }}{% endraw %}
          artifacts: dist/*.whl,dist/*.tar.gz
          token: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
